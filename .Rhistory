dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::document()
devtools::install()
dataviewR::dataviewer()
dataviewR::dataviewer(pharmaveadam::adae)
dataviewR::dataviewer(pharmaverseadam::adae)
rcmdcheck::rcmdcheck()
devtools::build()
devtools::check()        # Comprehensive check
devtools::check_win_devel()   # Check on Windows (via R-hub)
devtools::check_rhub()
devtools::check(manual = TRUE)
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::is_tinytex()
devtools::check(manual = TRUE)
tinytex::is_tinytex()
Sys.which("pdflatex")
tinytex::reinstall_tinytex()
tinytex::tlmgr_path()
Sys.which("pdflatex")
Sys.setenv(PATH = paste(Sys.getenv("PATH"),
"C:\Users\Dell\AppData\Roaming\TinyTeX\bin\windows", sep = ";"))
Sys.setenv(PATH = paste(Sys.getenv("PATH"),
"C:/Users/Dell/AppData/Roaming/TinyTeX/bin/windows", sep = ";"))
Sys.which("pdflatex")
devtools::check(manual = TRUE)
devtools::document()
devtools::install()
devtools::check(manual = TRUE)
devtools::document()
devtools::install()
devtools::check(manual = TRUE)
devtools::document()
devtools::check(manual = TRUE)
tools::Rd2pdf("C:\Users\Dell\AppData\Local\Temp\RtmpK2XR3k\file2594ba5304d\dataviewR.Rcheck")
tools::Rd2pdf("C:\\Users\\Dell\\AppData\\Local\\Temp\\RtmpK2XR3k\\file2594ba5304d\\dataviewR.Rcheck")
devtools::document()
devtools::check(manual = TRUE)
Sys.setenv(PATH = paste(Sys.getenv("PATH"),
"C:/Users/Dell/AppData/Roaming/TinyTeX/bin/windows", sep = ";"))
Sys.which("pdflatex")
devtools::build()
usethis::use_vignette("dataviewR-intro")
devtools::build_vignettes()
devtools::build_vignettes()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(dataviewR)
devtools::build_vignettes()
devtools::document()
devtools::install()
devtools::build()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::build_manual()
devtools::build()
tibble::tibble()
devtools::document()
devtools::build_vignettes()
devtools::install()
devtools::build()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::install()
library(dataviewR)
dataviewR::dataviewer()
usethis::use_testthat()
usethis::use_test("dataviewer")
devtools::test()
devtools::document()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
dataviewer(mtcars)
devtools::test()
dataviewer(mtcars)
devtools::test()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::install()
devtools::build()
devtools::install()
devtools::document()
devtools::check()
devtools::install()
devtools::build()
devtools::install()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::install()
devtools::build()
devtools::install()
dataviewR::dataviewer(pharmaverseadam::adae)
devtools::document()
devtools::check()
devtools::install()
devtools::build()
devtools::install()
devtools::document()
devtools::check()
devtools::install()
devtools::install()
devtools::build()
devtools::install()
dataviewR::dataviewer(pharmaverseadam::adae)
dataviewR::dataviewer(mtcars)
dataviewR::dataviewer()
dataviewR::dataviewer()
dataviewR::dataviewer()
remove.packages("dataviewR")
install.packages("dataviewR")
dataviewR::dataviewer()
library(dataviewR)
dataviewer(data = pharmaverseadam::adae)
dataviewer(data = admiral::admiral_adsl)
remove.packages("dataviewR")
devtools::document()
devtools::install()
devtools::document()
devtools::install()
dataviewR::dataviewer()
dataviewR::dataviewer()
library(dataviewR)
library(dataviewR)
dataviewR::dataviewer()
library(pharmaverseadam)
adae <- pharmaverseadam::adae
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
library(dplyr)
a <- data.frame(Species = NA)
iris1 <- bind_rows(iris,a)
devtools::document()
devtools::install()
dataviewR::dataviewer()
library(dplyr)
a <- data.frame(Species = NA)
iris1 <- bind_rows(iris,a)
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
library(dplyr)
a <- data.frame(Species = NA)
iris1 <- bind_rows(iris,a)
devtools::document()
devtools::install()
dataviewR::dataviewer()
devtools::document()
devtools::install()
dataviewR::dataviewer()
i <- import_globalenv_server("my")
i <- datamods::import_globalenv_server("my")
devtools::document()
devtools::install()
dataviewR::dataviewer()
library(shiny)
library(datamods)
ui <- fluidPage(
titlePanel("Import Dataset and Show Name"),
import_globalenv_ui("importer"),
verbatimTextOutput("dataset_name"),
tableOutput("dataset_preview")
)
server <- function(input, output, session) {
imported <- import_globalenv_server("importer", btn_show_data = FALSE)
# Dataset content
data_reactive <- reactive({
imported$data()
})
# Dataset name
output$dataset_name <- renderPrint({
req(imported$name())
paste("Selected dataset name:", imported$name())
})
output$dataset_preview <- renderTable({
req(data_reactive())
head(data_reactive())
})
}
shinyApp(ui, server)
library(dplyr)
a <- data.frame(Species = NA)
iris1 <- bind_rows(iris,a)
devtools::document()
devtools::install()
dataviewR::dataviewer()
dataviewR::dataviewer(pharmaverseadam::adae)
library(dplyr)
a <- data.frame(Species = NA)
iris1 <- bind_rows(iris,a)
devtools::document()
devtools::install()
dataviewR::dataviewer(pharmaverseadam::adae)
# Generated R Code
library(dplyr)
pharmaverseadam::adae  |>
filter(USUBJID=="01-701-1015") |>
select("USUBJID", "AESEQ")
dataviewR::dataviewer(iris1)
dataviewR::dataviewer()
dataviewR::dataviewer()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::install()
dataviewR::dataviewer()
dataviewR::dataviewer(a)
